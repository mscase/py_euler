#!/usr/bin/env python3

SUMMARY="""Highly Divisible Triangular Number"""

"""
The sequence of triangular numbers is generated by adding the natural numbers.  So the 7th triangular number would be:
1+2+3+4+5+6+7=28.  The first ten terms would be:

1,3,6,10,15,21,28,36,45,55,...

Let us list the factors of the first seven triangular numbers:

1:1
3:1,3
6:1,2,3,6
10:1,2,5,10
15:1,3,5,15
21,1,3,7,21
28,1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""
n = 1
total = n
while True:
    print (n, total)
    n+=1
    total+=n
    if n > 7:
        break

def factor_number(n):
    # use a set, sets have unique items
    factors = {1, n}
    # only have to go up to the sqrt of n
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            factors.add(i)
            factors.add(int(n / i))
    return factors

n = 1
total = n
#NUM_DIVISORS = 5
NUM_DIVISORS = 500
while True:
    n+=1
    total+=n
    factors = factor_number(total)
    #print (factors)
    if len(factors) > NUM_DIVISORS:
        print (f'{total} has more than {NUM_DIVISORS} divisors')
        break
